<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://example.com/</link>
    <atom:link href="http://example.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 18 Aug 2016 11:14:34 -0400</pubDate>
    <lastBuildDate>Thu, 18 Aug 2016 11:14:34 -0400</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Hello World</title>
        <description>&lt;h1 id=&quot;personal-blogging&quot;&gt;Personal Blogging&lt;/h1&gt;
&lt;p&gt;How many times in a month do you find yourself looking for some information and stumble upon someone’s personal blog where they are explaining how they overcame the exact situation that you’re haveing trouble with?&lt;/p&gt;

&lt;p&gt;Personal developer blogs serve two purposes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;They serve as a “rubber ducky” of sorts because we need to be able to explain what we did in plain english. The simple act of doing this really helps to reinforce the concepts that you’re writing about.&lt;/li&gt;
  &lt;li&gt;The serve as documentation for the next time you run into a similar problem. A blog that you personally wrote is going to be much easier to find than that one stack overflow question that helped point you in the right direction.&lt;/li&gt;
  &lt;li&gt;They give back to the community. In an industry where 95% of us are just taking information, code snippets, open source software, etc, it feels good to be able to give something back, however small. Maybe it will help someone on the other side of the country and make their day a little less stressful.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;creating-your-first-jekyll-blog&quot;&gt;Creating Your First Jekyll Blog&lt;/h1&gt;

&lt;p&gt;We’re going to set up a simple blog and get it hosted using Github pages.&lt;/p&gt;

&lt;h3 id=&quot;install-the-octopress-gem&quot;&gt;Install the &lt;code class=&quot;highlighter-rouge&quot;&gt;octopress&lt;/code&gt; gem.&lt;/h3&gt;

&lt;p&gt;We can do this by installing the gem globally with &lt;code class=&quot;highlighter-rouge&quot;&gt;gem install octopress&lt;/code&gt;, or we can put it in a &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; and install it with &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler&lt;/code&gt;. For now, we will just install it globally:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install octopress&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;verify&quot;&gt;Verify&lt;/h3&gt;

&lt;p&gt;Open a new terminal window and check to make sure that &lt;code class=&quot;highlighter-rouge&quot;&gt;octopress&lt;/code&gt; has been installed correctly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;octopress --help&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should see a list of available commands. If you don’t, then you done goofed…&lt;/p&gt;

&lt;h3 id=&quot;create-blog&quot;&gt;Create blog&lt;/h3&gt;

&lt;p&gt;Create a new blog in you preferred location. In the command below, replace &lt;code class=&quot;highlighter-rouge&quot;&gt;~/dev/blog&lt;/code&gt; with the directory that you want to be your blog’s root.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;octopress new ~/dev/blog&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out all the files that were created. Running &lt;code class=&quot;highlighter-rouge&quot;&gt;octopress new&lt;/code&gt; is the same as running &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;octopress init&lt;/code&gt;, so you’ll see a bunch of jekyll-specific files (remember, octopress is just something built on top of jekyll).&lt;/p&gt;

&lt;h3 id=&quot;test&quot;&gt;Test&lt;/h3&gt;

&lt;p&gt;To quickly test the default blog, run the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Open &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt; and make sure that you see something! If you don’t, you done goofed!&lt;/p&gt;

&lt;h3 id=&quot;create-a-post&quot;&gt;Create a Post&lt;/h3&gt;

&lt;p&gt;Let’s create our very first post:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;octopress new post &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The new post that was created can be found in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory.  Right now, it’s nothing more than &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;Front Matter&lt;/a&gt;, which is Jekyll’s way of defining special variables for the post to use.
Some of these variables are special, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt;, which Jekyll uses to decide which template should be used for laying out the content of your post.
Run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; again and refresh the browser to see your new post.&lt;/p&gt;

&lt;h3 id=&quot;add-content&quot;&gt;Add Content&lt;/h3&gt;

&lt;p&gt;It’s super boring now, so let’s add some content to it. The blog uses Markdown by default, so there’s no need to worry about adding a bunch of &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; (though you can if you want).&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Aug 2016 10:55:42 -0400</pubDate>
        <link>http://example.com/2016/08/18/hello-world.html</link>
        <guid isPermaLink="true">http://example.com/2016/08/18/hello-world.html</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 10:48:42 -0400</pubDate>
        <link>http://example.com/jekyll/update/2016/08/18/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/18/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
